// <auto-generated />
using System;
using GymSysyemWpf.Classes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymSysyemWpf.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymSysyemWpf.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("GymSysyemWpf.BuyProtien", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProtienName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantaty")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.ToTable("Buyprotiens");
                });

            modelBuilder.Entity("GymSysyemWpf.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceptionistID")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.HasIndex("ReceptionistID");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("GymSysyemWpf.GymMachine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.ToTable("GymMachines");
                });

            modelBuilder.Entity("GymSysyemWpf.ProtienProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyProtienID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantaty")
                        .HasColumnType("int");

                    b.Property<int>("ReceptionistID")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.HasIndex("BuyProtienID");

                    b.HasIndex("ReceptionistID");

                    b.ToTable("ProtienProducts");
                });

            modelBuilder.Entity("GymSysyemWpf.Receptionist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.ToTable("Receptionists");
                });

            modelBuilder.Entity("GymSysyemWpf.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceptionistID")
                        .HasColumnType("int");

                    b.Property<string>("Subscription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.HasIndex("CoachID");

                    b.HasIndex("ReceptionistID");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("GymSysyemWpf.Vendor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("GymSysyemWpf.BuyProtien", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("GymSysyemWpf.Coach", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany("Coaches")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GymSysyemWpf.Receptionist", "Receptionist")
                        .WithMany("Coaches")
                        .HasForeignKey("ReceptionistID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Receptionist");
                });

            modelBuilder.Entity("GymSysyemWpf.GymMachine", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany("Machines")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("GymSysyemWpf.ProtienProduct", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany("ProtienProducts")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GymSysyemWpf.BuyProtien", null)
                        .WithMany("ProtienProducts")
                        .HasForeignKey("BuyProtienID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GymSysyemWpf.Receptionist", "Receptionist")
                        .WithMany("ProtienProducts")
                        .HasForeignKey("ReceptionistID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Receptionist");
                });

            modelBuilder.Entity("GymSysyemWpf.Receptionist", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany("Receptionists")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("GymSysyemWpf.Trainee", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany("Trainees")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("GymSysyemWpf.Coach", null)
                        .WithMany("Trainees")
                        .HasForeignKey("CoachID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("GymSysyemWpf.Receptionist", "Receptionist")
                        .WithMany("Trainees")
                        .HasForeignKey("ReceptionistID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Receptionist");
                });

            modelBuilder.Entity("GymSysyemWpf.Vendor", b =>
                {
                    b.HasOne("GymSysyemWpf.Admin", "Admin")
                        .WithMany("Vendors")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("GymSysyemWpf.Admin", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("Machines");

                    b.Navigation("ProtienProducts");

                    b.Navigation("Receptionists");

                    b.Navigation("Trainees");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("GymSysyemWpf.BuyProtien", b =>
                {
                    b.Navigation("ProtienProducts");
                });

            modelBuilder.Entity("GymSysyemWpf.Coach", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymSysyemWpf.Receptionist", b =>
                {
                    b.Navigation("Coaches");

                    b.Navigation("ProtienProducts");

                    b.Navigation("Trainees");
                });
#pragma warning restore 612, 618
        }
    }
}
